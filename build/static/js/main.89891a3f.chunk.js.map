{"version":3,"sources":["App.js","index.js"],"names":["App","response","renderTable","center","maxColumns","columns","name","selector","sortable","data","entries","index","entry","slots","length","push","id","date","vacancy","available_capacity","i","e","keyname","a","width","responsive","title","conditionalRowStyles","when","row","style","backgroundColor","color","useState","pinCode","updatePinCode","centers","updateCenters","message","updateMessage","getInfo","obj","Date","config","method","axios","get","getDate","getMonth","getFullYear","console","clear","tConvert","time","toString","match","slice","join","className","href","htmlFor","onChange","event","target","value","onClick","cards","copySessions","sessions","builder","session","min_age_limit","vaccine","FeeTypeColor","fee_type","marginBottom","boxShadow","borderRadius","fontSize","fontFamily","lat","long","src","height","preventDefault","background","toUpperCase","center_id","block_name","district_name","state_name","pincode","marginTop","padding","theme","iconStyle","displayDataTypes","sortKeys","collapsed","displayArrayKey","from","to","renderCards","videoId","opts","playerVars","autoplay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89891a3f.chunk.js","sourcesContent":["import './App.css';\nimport axios from \"axios\";\nimport {useState} from \"react\";\nimport ReactJson from 'react-json-view'\nimport React from \"react\";\nimport GitHubButton from 'react-github-btn';\nimport {Card, CardHeader, CardBody, CardFooter} from 'react-simple-card';\nimport \"styled-components\";\nimport DataTable from 'react-data-table-component';\nimport YouTube from 'react-youtube';\n\n\n\nfunction App() {\nconst renderYoutubeVideo=()=>{\n        const opts = {\n            height: '320',\n            width: '570',\n            playerVars: {\n                // https://developers.google.com/youtube/player_parameters\n                autoplay: 0,\n            },\n        };\n\n    return <div className=\"header mainheader\"><YouTube videoId=\"XmA0-_e2gpQ\" opts={opts} /></div>;\n    }\n\n    const renderTable = (center) => {\n        // console.log(center.length) // Number of rows\n        let maxColumns = 0;\n        let columns = [{\n            name: `Date`,\n            selector: `date`,\n            center: true,\n            sortable: true,\n        }, {\n            name: `Vacancy`,\n            selector: `vacancy`,\n            center: true,\n            sortable: true,\n        },\n        ];\n        const data = [\n            // {id: 1, date: 'Conan the Barbarian', year: '1982'},\n            // {id: 2, date: 'Conan the Barbarian', year: '1982'}\n        ];\n\n        for (const [index, entry] of center.entries()) {\n\n            maxColumns = entry.slots.length > maxColumns ? entry.slots.length : maxColumns;\n            data.push({\n                id: index, date: entry.date, vacancy: entry.available_capacity\n            })\n            for (const [i, e] of entry.slots.entries()) {\n                const keyname = `slot${i + 1}`;\n                data[index][keyname] = e\n            }\n        }\n\n        for (let a = 0; a < maxColumns; ++a) {\n            columns.push({\n                center: true,\n                width: '260px',\n                name: `Slot ${a + 1}`,\n                selector: `slot${a + 1}`\n            })\n        }\n\n        /*  columns = [\n             {\n                 name: 'Date',\n                 selector: 'date',\n                 sortable: true,\n             },\n             {\n                 name: 'Year',\n                 selector: 'year',\n                 sortable: true,\n                 right: true,\n             }, {\n                 name: 'Year2',\n                 selector: 'year2',\n                 sortable: true,\n                 right: true,\n             }, {\n                 name: 'Year',\n                 selector: 'year3',\n                 sortable: true,\n                 right: true,\n             }\n         ];*/\n\n        const conditionalRowStyles = [\n            {\n                when: row => row.vacancy >=45,\n                style: {\n                    backgroundColor: 'rgba(169, 252, 144)',\n                    color: 'black',\n                    '&:hover': {\n                        // cursor: 'pointer',\n                    },\n                },\n            },\n            {\n                when: row => row.vacancy >= 10 && row.vacancy < 45,\n                style: {\n                    backgroundColor: 'rgba(245, 208, 164)',\n                    color: 'black',\n                    '&:hover': {\n                        // cursor: 'pointer',\n                    },\n                },\n            },\n            {\n                when: row => row.vacancy < 10,\n                style: {\n                    backgroundColor: 'rgba(255, 110, 110)',\n                    color: 'black',\n                    '&:hover': {\n                        // cursor: 'not-allowed',\n                    },\n                },\n            },\n        ];\n\n\n        return <DataTable\n            responsive={true}\n            title={center.name}\n            columns={columns}\n            data={data}\n            conditionalRowStyles={conditionalRowStyles}\n\n        />\n    }\n\n    let response;\n    const [pinCode, updatePinCode] = useState(0);\n    const [centers, updateCenters] = useState([]);\n    const [message, updateMessage] = useState('');\n    const getInfo = async () => {\n        const obj = new Date();\n        const config = {\n            method: 'get',\n        };\n        try {\n            response = await axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${pinCode}&date=${obj.getDate()}-${obj.getMonth() + 1}-${obj.getFullYear()}`\n                , config)\n            updateCenters(response.data.centers)\n            updateMessage(`No centers found in ${pinCode}`)\n\n        } catch (error) {\n            console.clear()\n        }\n        // console.log(response.data)\n    }\n\n    function tConvert(time) {\n        // Check correct time format and split into components\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n        if (time.length > 1) { // If time format correct\n            time = time.slice(1);  // Remove full string match value\n            time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n            time[0] = +time[0] % 12 || 12; // Adjust hours\n        }\n        return time.join(''); // return adjusted time or original string\n    }\n\n    const renderCards = () => {\n        var cards = []\n        for (let center of centers) {\n            const copySessions = center.sessions;\n            const builder = [];\n            for (let session of copySessions) {\n                const {date, min_age_limit, vaccine, available_capacity} = session; // slots,date,\n                builder.push({date, min_age_limit, vaccine, available_capacity,})\n            }\n            const FeeTypeColor = center.fee_type === 'Free' ? '#4CAF50' : '#FF4500'\n            // console.log(FeeTypeColor)\n            cards.push(<Card style={{marginBottom: '50px', boxShadow: '10px 10px 5px #aaaaaa', borderRadius: '8px'}} key={center.center_id}>\n                <CardHeader style={{fontSize: '33px', fontFamily: 'arial'}} key={center.center_id}>\n                    <a href={`https://www.google.com/maps/search/?api=1&query=${center.lat},${center.long}`}\n                       target='_blank'>\n                        <img\n                            src='https://www.pinclipart.com/picdir/middle/561-5612244_map-pin-icon-green-green-map-pin-png.png'\n                            height='30px' width='30px'/>\n                    </a>\n                    CENTER NAME: {center.name}\n                    <a href=\"#\"\n                       target=\"#\"\n                       className=\"tag\"\n                       onClick={(e) => {\n                           e.preventDefault()\n                       }}\n                       style={{\n                           background: FeeTypeColor\n                       }}\n                           title={'VACCINATION TYPE: ' + center.fee_type.toUpperCase()}>{center.fee_type}</a>\n                           </CardHeader>\n                           <CardBody style={{\n                           fontSize: '25px',\n                           fontFamily: 'arial'\n                       }}>Address: {center.block_name}, {center.district_name}, {center.state_name}- {center.pincode}\n                       {renderTable(center.sessions)}\n                           <ReactJson style={{fontSize: '12px', marginTop: '10px', borderRadius: '8px', padding: '10px'}}\n                           src={builder} theme=\"paraiso\" name=\"Information\" iconStyle={\"triangle\"}\n                           displayDataTypes={false} sortKeys={true} collapsed={true} displayArrayKey={false}/>\n                           </CardBody>\n                           <CardFooter style={{\n                           fontSize: '18px',\n                           fontFamily: 'arial'\n                       }}>FROM: {tConvert(center.from)} TO: {tConvert(center.to)}\n                           </CardFooter>\n\n                           </Card>\n                           )\n                       }\n        return cards;\n    }\n\n    return (\n        <div className=\"formfield\">\n            <h1 className=\"header mainheader\">CoWIN Tracker by Ankur Paul</h1>\n            <GitHubButton\n            href=\"https://github.com/nooobcoder\">Follow me @nooobcoder</GitHubButton>\n            <h2 htmlFor=\"input1\" className=\"header\">\n                PIN CODE / POSTAL CODE (required)\n            </h2>\n            <input id=\"input1\" name=\"Name\" onChange={async (event) => {\n                await updatePinCode(event.target.value)\n            }}/>\n            <button id=\"btn1\" name=\"submit\" onClick={() => {\n                getInfo();\n\n            }}>SUBMIT\n            </button>\n\n            {renderCards()}\n\n            {renderYoutubeVideo()}\n\n\n            {\n                centers.length > 0 ? <div>\n                        <h3 className=\"header\">Entire Metadata (JSON)</h3>\n                        <ReactJson src={centers} theme=\"monokai\" collapsed={true}/></div> :\n                    <h3>{message}</h3>\n            }\n\n            <footer>\n                <p>Designer: Ankur Paul <a href=\"mailto:ankurpaulin2019@gmail.com\">ankurpaulin2019@gmail.com</a></p>\n                <p>&#169; All data are served by the CoWIN Portal of India and it's API. Refer to <a\n                    href=\"https://apisetu.gov.in/public/marketplace/api/cowin/\">API</a> docs for more information</p>\n                <p></p>\n            </footer>\n        </div>\n    )\n        ;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}