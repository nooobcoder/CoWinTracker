{"version":3,"sources":["App.js","index.js"],"names":["App","response","renderTable","center","console","log","length","maxColumns","columns","name","selector","sortable","data","entries","index","entry","slots","push","id","date","i","e","keyname","a","ctr","title","useState","pinCode","updatePinCode","centers","updateCenters","message","updateMessage","getInfo","obj","Date","config","method","axios","get","getDate","getMonth","getFullYear","clear","tConvert","time","toString","match","slice","join","className","href","htmlFor","onChange","event","target","value","onClick","cards","copySessions","sessions","builder","session","min_age_limit","vaccine","available_capacity","style","marginBottom","boxShadow","borderRadius","fontSize","fontFamily","lat","long","src","height","width","fee_type","toUpperCase","center_id","block_name","district_name","state_name","pincode","marginTop","padding","theme","iconStyle","displayDataTypes","sortKeys","collapsed","displayArrayKey","from","to","renderCards","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59057a14.chunk.js","sourcesContent":["import './App.css';\nimport axios from \"axios\";\nimport {useState} from \"react\";\nimport ReactJson from 'react-json-view'\nimport React from \"react\";\nimport GitHubButton from 'react-github-btn';\nimport {Card, CardHeader, CardBody, CardFooter} from 'react-simple-card';\nimport \"styled-components\";\nimport DataTable from 'react-data-table-component';\n\n\nfunction App() {\n\n    const renderTable = (center) => {\n        console.log(center.length) // Number of rows\n        let maxColumns = 0;\n        let columns = [{\n            name: `Date`,\n            selector: `date`,\n            center: true,\n            sortable: true,\n        }];\n        const data = [\n            // {id: 1, date: 'Conan the Barbarian', year: '1982'},\n            // {id: 2, date: 'Conan the Barbarian', year: '1982'}\n        ];\n\n        for (const [index, entry] of center.entries()) {\n\n            maxColumns = entry.slots.length > maxColumns ? entry.slots.length : maxColumns;\n            data.push({\n                id: index, date: entry.date,\n            })\n            for (const [i, e] of entry.slots.entries()) {\n                const keyname = `slot${i + 1}`;\n                data[index][keyname] = e\n            }\n        }\n        console.log('MAX COLS', data)\n        for (let a = 0; a < maxColumns; ++a) {\n            columns.push({\n                center: true,\n                name: `Slot ${a + 1}`,\n                selector: `slot${a + 1}`\n            })\n        }\n\n        for (const ctr of center) {\n            console.log('DATE', ctr.date, ctr.length)\n        }\n\n        /*  columns = [\n             {\n                 name: 'Date',\n                 selector: 'date',\n                 sortable: true,\n             },\n             {\n                 name: 'Year',\n                 selector: 'year',\n                 sortable: true,\n                 right: true,\n             }, {\n                 name: 'Year2',\n                 selector: 'year2',\n                 sortable: true,\n                 right: true,\n             }, {\n                 name: 'Year',\n                 selector: 'year3',\n                 sortable: true,\n                 right: true,\n             }\n         ];*/\n\n        return <DataTable\n            title={center.name}\n            columns={columns}\n            data={data}\n        />\n    }\n\n    let response;\n    const [pinCode, updatePinCode] = useState(0);\n    const [centers, updateCenters] = useState([]);\n    const [message, updateMessage] = useState('');\n    const getInfo = async () => {\n        const obj = new Date();\n        const config = {\n            method: 'get',\n        };\n        try {\n            response = await axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${pinCode}&date=${obj.getDate()}-${obj.getMonth() + 1}-${obj.getFullYear()}`\n                , config)\n            updateCenters(response.data.centers)\n            updateMessage(`No centers found in ${pinCode}`)\n\n        } catch (error) {\n            console.clear()\n        }\n        // console.log(response.data)\n    }\n\n    function tConvert(time) {\n        // Check correct time format and split into components\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n        if (time.length > 1) { // If time format correct\n            time = time.slice(1);  // Remove full string match value\n            time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n            time[0] = +time[0] % 12 || 12; // Adjust hours\n        }\n        return time.join(''); // return adjusted time or original string\n    }\n\n    const renderCards = () => {\n        var cards = []\n        for (let center of centers) {\n            const copySessions = center.sessions;\n            const builder = [];\n            for (let session of copySessions) {\n                const {date, min_age_limit, vaccine, available_capacity} = session; // slots,date,\n                builder.push({date, min_age_limit, vaccine, available_capacity, })\n            }\n            cards.push(<Card style={{marginBottom: '50px', boxShadow: '10px 10px 5px #aaaaaa', borderRadius: '8px'}}>\n                    <CardHeader style={{fontSize: '33px', fontFamily: 'arial'}} key={center.center_id}>\n                        <a href={`https://www.google.com/maps/search/?api=1&query=${center.lat},${center.long}`}\n                           target='_blank'>\n                            <img\n                                src='https://www.pinclipart.com/picdir/middle/561-5612244_map-pin-icon-green-green-map-pin-png.png'\n                                height='30px' width='30px'/>\n                        </a>\n                        CENTER NAME: {center.name}\n                        <a href=\"https://www.kwernerdesign.com/blog/tag/birthday-cards/\"\n                           className=\"tag\"\n                           title={'VACCINATION TYPE: ' + center.fee_type.toUpperCase()}>{center.fee_type}</a>\n                    </CardHeader>\n                    <CardBody style={{\n                        fontSize: '25px',\n                        fontFamily: 'arial'\n                    }}>Address: {center.block_name}, {center.district_name}, {center.state_name}- {center.pincode}\n                        {renderTable(center.sessions)}\n                        <ReactJson style={{fontSize: '18px', marginTop: '10px', borderRadius: '8px', padding: '10px'}}\n                                   src={builder} theme=\"paraiso\" name=\"Schedules\" iconStyle={\"circle\"}\n                                   displayDataTypes={false} sortKeys={true} collapsed={1} displayArrayKey={false}/>\n                    </CardBody>\n                    <CardFooter style={{\n                        fontSize: '18px',\n                        fontFamily: 'arial'\n                    }}>FROM: {tConvert(center.from)} TO: {tConvert(center.to)}\n                    </CardFooter>\n\n                </Card>\n            )\n        }\n        return cards;\n    }\n\n    return (\n\n        <div className=\"formfield\"><h1 className=\"header mainheader\">CoWIN Tracker by Ankur Paul</h1><GitHubButton\n            href=\"https://github.com/nooobcoder\">Follow me @nooobcoder</GitHubButton>\n            <h2 htmlFor=\"input1\" className=\"header\">\n                PIN CODE (required)\n            </h2>\n            <input id=\"input1\" name=\"Name\" onChange={async (event) => {\n                await updatePinCode(event.target.value)\n            }}/>\n            <button id=\"btn1\" name=\"submit\" onClick={() => {\n                getInfo();\n\n            }}>SUBMIT\n            </button>\n            {renderCards()}{\n                centers.length > 0 ? <div>\n                        <h3 className=\"header\">Entire Metadata (JSON)</h3>\n                        <ReactJson src={centers} theme=\"monokai\" collapsed={1}/></div> :\n                    <h3>{message}</h3>\n            }\n            <footer>\n                <p>Designer: Ankur Paul <a href=\"mailto:ankurpaulin2019@gmail.com\">ankurpaulin2019@gmail.com</a></p>\n                <p>&#169; All data are served by the CoWIN Portal of India and it's API. Refer to <a\n                    href=\"https://apisetu.gov.in/public/marketplace/api/cowin/\">API</a> docs for more information</p>\n                <p></p>\n            </footer>\n        </div>\n    )\n        ;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}