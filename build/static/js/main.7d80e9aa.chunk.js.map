{"version":3,"sources":["App.js","index.js"],"names":["App","response","useState","renderTable","center","maxColumns","columns","name","selector","width","sortable","data","entries","index","entry","slots","length","push","id","date","vacancy","available_capacity","age","min_age_limit","i","e","keyname","a","responsive","title","conditionalRowStyles","when","row","style","backgroundColor","color","pinCode","updatePinCode","centers","updateCenters","message","updateMessage","getInfo","preventDefault","obj","Date","config","method","axios","get","getDate","getMonth","getFullYear","console","clear","tConvert","time","toString","match","slice","join","className","href","videoId","opts","height","playerVars","autoplay","htmlFor","onSubmit","onChange","event","target","value","type","cards","copySessions","sessions","builder","session","vaccine","FeeTypeColor","fee_type","marginBottom","boxShadow","borderRadius","fontSize","fontFamily","lat","long","src","onClick","background","toUpperCase","center_id","block_name","district_name","state_name","pincode","marginTop","padding","theme","iconStyle","displayDataTypes","sortKeys","collapsed","displayArrayKey","from","to","renderCards","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d80e9aa.chunk.js","sourcesContent":["import './App.css';\nimport axios from \"axios\";\nimport {useState} from \"react\";\nimport ReactJson from 'react-json-view'\nimport React from \"react\";\nimport GitHubButton from 'react-github-btn';\nimport {Card, CardHeader, CardBody, CardFooter} from 'react-simple-card';\nimport \"styled-components\";\nimport DataTable from 'react-data-table-component';\nimport YouTube from 'react-youtube';\n\n\nfunction App() {\n    const [open, setOpen] = useState(false);\n\n    const onOpenModal = () => setOpen(true);\n    const onCloseModal = () => setOpen(false);\n\n    const renderYoutubeVideo = () => {\n        const opts = {\n            height: '320',\n            width: '570',\n            playerVars: {\n                // https://developers.google.com/youtube/player_parameters\n                autoplay: 0,\n            },\n        };\n\n        return <div className=\"header mainheader\"><YouTube videoId=\"XmA0-_e2gpQ\" opts={opts}/></div>;\n    }\n\n    const renderTable = (center) => {\n        // console.log(center.length) // Number of rows\n        let maxColumns = 0;\n        let columns = [{\n            name: `Date`,\n            selector: `date`,\n            center: true,\n            width:'160px',\n            sortable: true,\n        }, {\n            name: `Vacancy`,\n            selector: `vacancy`,\n            center: true,\n            width:'80px',\n            sortable: true,\n\n        }, {\n            name: `Age`,\n            width:'125px',\n\n            selector: `age`,\n            center: true,\n            sortable: true,\n        },\n        ];\n        const data = [\n            // {id: 1, date: 'Conan the Barbarian', year: '1982'},\n            // {id: 2, date: 'Conan the Barbarian', year: '1982'}\n        ];\n\n        for (const [index, entry] of center.entries()) {\n\n            maxColumns = entry.slots.length > maxColumns ? entry.slots.length : maxColumns;\n            data.push({\n                id: index, date: entry.date, vacancy: entry.available_capacity, age: entry.min_age_limit,\n            })\n            for (const [i, e] of entry.slots.entries()) {\n                const keyname = `slot${i + 1}`;\n                data[index][keyname] = e\n            }\n        }\n\n        for (let a = 0; a < maxColumns; ++a) {\n            columns.push({\n                center: true,\n                width: 'auto',\n                name: `Slot ${a + 1}`,\n                selector: `slot${a + 1}`\n            })\n        }\n\n        /*  columns = [\n             {\n                 name: 'Date',\n                 selector: 'date',\n                 sortable: true,\n             },\n             {\n                 name: 'Year',\n                 selector: 'year',\n                 sortable: true,\n                 right: true,\n             }, {\n                 name: 'Year2',\n                 selector: 'year2',\n                 sortable: true,\n                 right: true,\n             }, {\n                 name: 'Year',\n                 selector: 'year3',\n                 sortable: true,\n                 right: true,\n             }\n         ];*/\n\n        const conditionalRowStyles = [\n            {\n                when: row => row.vacancy >= 45,\n                style: {\n                    backgroundColor: 'rgba(169, 252, 144)',\n                    color: 'black',\n                    '&:hover': {\n                        // cursor: 'pointer',\n                    },\n                },\n            },\n            {\n                when: row => row.vacancy >= 10 && row.vacancy < 45,\n                style: {\n                    backgroundColor: 'rgba(245, 208, 164)',\n                    color: 'black',\n                    '&:hover': {\n                        // cursor: 'pointer',\n                    },\n                },\n            },\n            {\n                when: row => row.vacancy < 10,\n                style: {\n                    backgroundColor: 'rgba(255, 110, 110)',\n                    color: 'black',\n                    '&:hover': {\n                        // cursor: 'not-allowed',\n                    },\n                },\n            },\n        ];\n\n\n        return <DataTable\n            responsive={true}\n            title={center.name}\n            columns={columns}\n            data={data}\n            conditionalRowStyles={conditionalRowStyles}\n\n        />\n    }\n\n    let response;\n    const [pinCode, updatePinCode] = useState(0);\n    const [centers, updateCenters] = useState([]);\n    const [message, updateMessage] = useState('');\n    const getInfo = async (e) => {\n        e.preventDefault();\n        const obj = new Date();\n        const config = {\n            method: 'get',\n        };\n        try {\n            response = await axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${pinCode}&date=${obj.getDate()}-${obj.getMonth() + 1}-${obj.getFullYear()}`\n                , config)\n            updateCenters(response.data.centers)\n\n            updateMessage(`No vaccination centers found in ${pinCode}`)\n\n        } catch (error) {\n            console.clear()\n        }\n        // console.log(response.data)\n    }\n\n    function tConvert(time) {\n        // Check correct time format and split into components\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n        if (time.length > 1) { // If time format correct\n            time = time.slice(1);  // Remove full string match value\n            time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n            time[0] = +time[0] % 12 || 12; // Adjust hours\n        }\n        return time.join(''); // return adjusted time or original string\n    }\n\n    const renderCards = () => {\n        var cards = []\n        for (let center of centers) {\n            const copySessions = center.sessions;\n            const builder = [];\n            for (let session of copySessions) {\n                const {date, min_age_limit, vaccine, available_capacity} = session; // slots,date,\n                builder.push({date, min_age_limit, vaccine, available_capacity,})\n            }\n            const FeeTypeColor = center.fee_type === 'Free' ? '#4CAF50' : '#FF4500'\n            // console.log(FeeTypeColor)\n            cards.push(<Card style={{marginBottom: '50px', boxShadow: '10px 10px 5px #aaaaaa', borderRadius: '8px'}}\n                             key={center.center_id}>\n                    <CardHeader style={{fontSize: '33px', fontFamily: 'arial'}} key={center.center_id}>\n                        <a href={`https://www.google.com/maps/search/?api=1&query=${center.lat},${center.long}`}\n                           target='_blank'>\n                            <img\n                                src='https://www.pinclipart.com/picdir/middle/561-5612244_map-pin-icon-green-green-map-pin-png.png'\n                                height='30px' width='30px'/>\n                        </a>\n                        CENTER NAME: {center.name}\n                        <a href=\"#\"\n                           target=\"#\"\n                           className=\"tag\"\n                           onClick={(e) => {\n                               e.preventDefault()\n                           }}\n\n                           style={{\n                               background: FeeTypeColor\n                           }}\n                           title={'VACCINATION TYPE: ' + center.fee_type.toUpperCase()}>{center.fee_type}</a>\n                    </CardHeader>\n                    <CardBody style={{\n                        fontSize: '25px',\n                        fontFamily: 'arial'\n                    }}>Address: {center.block_name}, {center.district_name}, {center.state_name}- {center.pincode}\n                        {renderTable(center.sessions)}\n                        <ReactJson style={{fontSize: '12px', marginTop: '10px', borderRadius: '8px', padding: '10px'}}\n                                   src={builder} theme=\"paraiso\" name=\"Information\" iconStyle={\"triangle\"}\n                                   displayDataTypes={false} sortKeys={true} collapsed={true} displayArrayKey={false}/>\n                    </CardBody>\n                    <CardFooter style={{\n                        fontSize: '18px',\n                        fontFamily: 'arial'\n                    }}>FROM: {tConvert(center.from)} TO: {tConvert(center.to)}\n                    </CardFooter>\n\n                </Card>\n            )\n        }\n        return cards;\n    }\n\n    return (\n        <div className=\"formfield\">\n            <h1 className=\"header mainheader\">CoWIN Tracker by Ankur Paul</h1>\n            <GitHubButton\n                href=\"https://github.com/nooobcoder\">Follow me @nooobcoder</GitHubButton>\n            {renderYoutubeVideo()}\n            <h2 htmlFor=\"input1\" className=\"header\">\n                PIN CODE / POSTAL CODE (required)\n            </h2>\n            <form onSubmit={getInfo} className=\"formfield\">\n\n                <input id=\"input1\" name=\"Name\" onChange={async (event) => {\n                    await updatePinCode(event.target.value)\n                }}/>\n                <br/>\n                <button id=\"btn1\" name=\"submit\" type=\"submit\" >SUBMIT\n                </button>\n            </form>\n            {renderCards()}\n\n\n            {\n                centers.length > 0 ? <div>\n                        <h3 className=\"header\">Entire Metadata (JSON)</h3>\n                        <ReactJson src={centers} theme=\"monokai\" collapsed={true}/></div>\n                    :\n                    <h2 className='header ' style={{color: 'red'}}>{message}</h2>\n\n            }\n\n            <footer>\n                <p>Designer: Ankur Paul <a href=\"mailto:ankurpaulin2019@gmail.com\">ankurpaulin2019@gmail.com</a></p>\n                <p>&#169; All data are served by the CoWIN Portal of India and it's API. Refer to <a\n                    href=\"https://apisetu.gov.in/public/marketplace/api/cowin/\">API</a> docs for more information</p>\n                <p></p>\n            </footer>\n        </div>\n    )\n        ;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}